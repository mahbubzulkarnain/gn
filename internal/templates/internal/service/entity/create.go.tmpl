package {{.EntityNameLoweCase}}{{.Version}}service

import (
	"context"

    "{{.ModuleName}}/pkg/{{.EntityNameLoweCase}}/{{.Version}}"
    "{{.ModuleName}}/pkg/{{.EntityNameLoweCase}}/{{.Version}}/dto"
)

// Create ...
func (s service) Create(ctx context.Context, req *{{.EntityNameLoweCase}}{{.Version}}dto.CreateRequest) (*{{.EntityNameLoweCase}}{{.Version}}dto.CreateResponse, error) {
    var (
        err error
        data = &{{.EntityNameLoweCase}}{{.Version}}.Model{}
    )
    if err = s.{{.EntityNamePascalCase}}Repository.Create(ctx, data).Error;err!=nil {
        return nil, err
    }
    return &{{.EntityNameLoweCase}}{{.Version}}dto.CreateResponse{}, nil
}

// Create ...
func (m *Mock) Create(ctx context.Context, req *{{.EntityNameLoweCase}}{{.Version}}dto.CreateRequest) (*{{.EntityNameLoweCase}}{{.Version}}dto.CreateResponse, error) {
	args := m.Called(ctx, req)
	return args.Get(0).(*{{.EntityNameLoweCase}}{{.Version}}dto.CreateResponse), args.Error(1)
}